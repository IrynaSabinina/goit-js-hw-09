{"mappings":"AAAeA,SAASC,cAAc,SAM/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAIC,iBACJ,MACEC,UAAYC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAIO,cAER,IAAIC,EAAUC,OAAOL,EAAMM,OACvBC,EAASF,OAAOJ,EAAKK,OACrBE,EAAWH,OAAOH,EAAOI,OAC7BV,EAAIO,cAAcM,QAElB,IACE,IAAIC,EAAW,EAAGC,EAAWP,EAC7BM,GAAYF,EACZE,GAAY,EAAGC,GAAYJ,EAE3BK,YAAW,KAYf,IAAuBC,EAAUd,GAAVc,EAXHH,EAWaX,EAXHY,EAYrB,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAClCF,EACFF,EAAQ,C,SAAEF,E,MAAUd,IAEpBiB,EAAO,C,SAAEH,E,MAAUd,QAhBhBqB,MAAK,EAACP,SAAEA,EAAQd,MAAEA,MACjBsB,QAAQC,IAAI,uBAAqBT,QAAiBd,UAEnDwB,OAAM,EAACV,SAAEA,EAAQd,MAAEA,MAClBsB,QAAQC,IAAI,sBAAoBT,QAAed,YAElDY","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\n\n// const delayEl = document.querySelector('[name=\"delay\"]');\n// const stepEl = document.querySelector('[name=\"step\"]');\n// const amountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(evt) {\n  evt.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = evt.currentTarget;\n\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n  evt.currentTarget.reset();\n\n  for (\n    let position = 1, delayNew = delayEl;\n    position <= amountEl;\n    position += 1, delayNew += stepEl\n  ) {\n    setTimeout(() => {\n      createPromise(position, delayNew)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delayNew);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay }); // Reject\n    }\n  });\n}\n"],"names":["document","querySelector","addEventListener","evt","preventDefault","elements","delay","delay1","step","amount","currentTarget","delayEl","Number","value","stepEl","amountEl","reset","position1","delayNew","setTimeout","position","Promise","resolve","reject","shouldResolve","Math","random","then","console","log","catch"],"version":3,"file":"03-promises.1b3f40d2.js.map"}